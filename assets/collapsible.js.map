{"mappings":"C,A,WCCA,MAAM,UAAoB,YACxB,OAAO,eAAiB,CAAA,CAAK,AAC7B,cAAc,CACZ,KAAK,EACP,CACA,mBAAoB,CAClB,IAAI,CAAC,kBAAkB,CAAG,IAAI,CAAC,YAAY,CAAC,wBAA0B,IACtE,IAAI,CAAC,OAAO,CAAG,IAAI,CAAC,aAAa,CAAC,uBAClC,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,aAAa,CAAC,qBAE5B,IAAI,CAAC,MAAM,KACb,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAG,SAC9B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAG,OACpB,sBAAsB,KACpB,IAAI,CAAC,SAAS,EAChB,IAGF,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,QAAS,AAAC,IACpC,IAAI,CAAC,MAAM,EACb,EACF,CACA,QAAS,CACP,OAAO,IAAI,CAAC,YAAY,CAAC,OAC3B,CACA,kBAAmB,CACjB,IAAM,EAAc,IAAI,CAAC,KAAK,CAAC,qBAAqB,GAAG,MAAM,AAC7D,CAAA,IAAI,CAAC,KAAK,CAAC,MAAM,CAAG,EAAc,IACpC,CACA,WAAY,CACV,IAAM,EAAgB,IAAI,CAAC,OAAO,CAAC,qBAAqB,GAAG,MAAM,CAC3D,EAAc,IAAI,CAAC,KAAK,CAAC,qBAAqB,GAAG,MAAM,AAC7D,CAAA,IAAI,CAAC,KAAK,CAAC,MAAM,CAAG,EAAgB,EAAc,IACpD,CACA,MAAO,CACL,IAAI,CAAC,YAAY,CAAC,OAAQ,CAAA,GAC1B,IAAI,CAAC,gBAAgB,GACrB,IAAI,CAAC,SAAS,GAEd,WAAW,KACT,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAG,SAC9B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAG,OACpB,IAAI,CAAC,aAAa,CAAC,IAAI,MAAM,sBAC/B,EAAG,IAAI,CAAC,kBAAkB,CAC5B,CACA,OAAQ,CACN,IAAI,CAAC,eAAe,CAAC,QACrB,IAAI,CAAC,SAAS,GACd,OAAO,qBAAqB,CAAC,KAC3B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAG,GAC9B,IAAI,CAAC,gBAAgB,GACrB,IAAI,CAAC,aAAa,CAAC,IAAI,MAAM,sBAC/B,EACF,CACA,QAAS,CACH,IAAI,CAAC,MAAM,GACb,IAAI,CAAC,KAAK,GAEV,IAAI,CAAC,IAAI,EAEb,CACF,CACA,eAAe,MAAM,CAAC,oBAAqB,GAC3C,eAAe,MAAM,CAAC,sBAAuB,cAAc,YAAa,GACxE,eAAe,MAAM,CAAC,oBAAqB,cAAc,YAAa,E","sources":["<anon>","src/js/collapsible.js"],"sourcesContent":["(function () {\nclass $ceb1a380b6254165$var$Collapsible extends HTMLElement {\n    static formAssociated = true;\n    constructor(){\n        super();\n    }\n    connectedCallback() {\n        this.transitionDuration = this.getAttribute(\"transition-duration\") || 300;\n        this.content = this.querySelector(\"collapsible-content\");\n        this.label = this.querySelector(\"collapsible-label\");\n        if (this.isOpen()) {\n            this.content.style.position = \"static\";\n            this.style.height = \"auto\";\n            requestAnimationFrame(()=>{\n                this.setHeight();\n            });\n        }\n        this.label.addEventListener(\"click\", (e)=>{\n            this.toggle();\n        });\n    }\n    isOpen() {\n        return this.hasAttribute(\"open\");\n    }\n    setInitialHeight() {\n        const labelHeight = this.label.getBoundingClientRect().height;\n        this.style.height = labelHeight + \"px\";\n    }\n    setHeight() {\n        const contentHeight = this.content.getBoundingClientRect().height;\n        const labelHeight = this.label.getBoundingClientRect().height;\n        this.style.height = contentHeight + labelHeight + \"px\";\n    }\n    open() {\n        this.setAttribute(\"open\", true);\n        this.setInitialHeight();\n        this.setHeight();\n        setTimeout(()=>{\n            this.content.style.position = \"static\";\n            this.style.height = \"auto\";\n            this.dispatchEvent(new Event(\"collapsible:opened\"));\n        }, this.transitionDuration);\n    }\n    close() {\n        this.removeAttribute(\"open\");\n        this.setHeight();\n        window.requestAnimationFrame(()=>{\n            this.content.style.position = \"\";\n            this.setInitialHeight();\n            this.dispatchEvent(new Event(\"collapsible:closed\"));\n        });\n    }\n    toggle() {\n        if (this.isOpen()) this.close();\n        else this.open();\n    }\n}\ncustomElements.define(\"collapsible-outer\", $ceb1a380b6254165$var$Collapsible);\ncustomElements.define(\"collapsible-content\", class extends HTMLElement {\n});\ncustomElements.define(\"collapsible-label\", class extends HTMLElement {\n});\n\n})();\n//# sourceMappingURL=collapsible.js.map\n","\nclass Collapsible extends HTMLElement {\n  static formAssociated = true;\n  constructor() {\n    super();\n  }\n  connectedCallback() {\n    this.transitionDuration = this.getAttribute(\"transition-duration\") || 300;\n    this.content = this.querySelector(\"collapsible-content\");\n    this.label = this.querySelector(\"collapsible-label\");\n\n    if (this.isOpen()) {\n      this.content.style.position = \"static\";\n      this.style.height = \"auto\";\n      requestAnimationFrame(() => {\n        this.setHeight();\n      });\n    }\n\n    this.label.addEventListener(\"click\", (e) => {\n      this.toggle();\n    });\n  }\n  isOpen() {\n    return this.hasAttribute(\"open\");\n  }\n  setInitialHeight() {\n    const labelHeight = this.label.getBoundingClientRect().height;\n    this.style.height = labelHeight + \"px\";\n  }\n  setHeight() {\n    const contentHeight = this.content.getBoundingClientRect().height;\n    const labelHeight = this.label.getBoundingClientRect().height;\n    this.style.height = contentHeight + labelHeight + \"px\";\n  }\n  open() {\n    this.setAttribute(\"open\", true);\n    this.setInitialHeight();\n    this.setHeight();\n\n    setTimeout(() => {\n      this.content.style.position = \"static\";\n      this.style.height = \"auto\";\n      this.dispatchEvent(new Event(\"collapsible:opened\"));\n    }, this.transitionDuration);\n  }\n  close() {\n    this.removeAttribute(\"open\");\n    this.setHeight();\n    window.requestAnimationFrame(() => {\n      this.content.style.position = \"\";\n      this.setInitialHeight();\n      this.dispatchEvent(new Event(\"collapsible:closed\"));\n    });\n  }\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n}\ncustomElements.define(\"collapsible-outer\", Collapsible);\ncustomElements.define(\"collapsible-content\", class extends HTMLElement {});\ncustomElements.define(\"collapsible-label\", class extends HTMLElement {});\n"],"names":["$ceb1a380b6254165$var$Collapsible","HTMLElement","formAssociated","constructor","connectedCallback","transitionDuration","getAttribute","content","querySelector","label","isOpen","style","position","height","requestAnimationFrame","setHeight","addEventListener","e","toggle","hasAttribute","setInitialHeight","labelHeight","getBoundingClientRect","contentHeight","open","setAttribute","setTimeout","dispatchEvent","Event","close","removeAttribute","window","customElements","define"],"version":3,"file":"collapsible.js.map"}