{"mappings":"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","sources":["<anon>","src/js/embla-slider-component.js"],"sourcesContent":["(function () {\nconst $9806afdc43a432b0$var$EMBLA_SLIDE_NAME = \"embla-slide\";\nconst $9806afdc43a432b0$var$EMBLA_CONTAINER_NAME = \"embla-slides\";\nconst $9806afdc43a432b0$var$EMBLA_VIEWPORT_NAME = \"embla-viewport\";\nconst $9806afdc43a432b0$var$EMBLA_NEXT_NAME = \"embla-next\";\nconst $9806afdc43a432b0$var$EMBLA_PREV_NAME = \"embla-prev\";\nconst $9806afdc43a432b0$var$EMBLA_SLIDER_NAME = \"embla-slider\";\nconst $9806afdc43a432b0$var$EMBLA_PROGRESS_NAME = \"embla-progress\";\nconst $9806afdc43a432b0$var$EMBLA_THUMBNAIL_NAME = \"embla-thumbnail\";\nconst $9806afdc43a432b0$var$camelize = (s)=>s.replace(/-./g, (x)=>x[1].toUpperCase());\ncustomElements.define($9806afdc43a432b0$var$EMBLA_CONTAINER_NAME, class extends HTMLElement {\n});\ncustomElements.define($9806afdc43a432b0$var$EMBLA_SLIDE_NAME, class extends HTMLElement {\n});\ncustomElements.define($9806afdc43a432b0$var$EMBLA_VIEWPORT_NAME, class extends HTMLElement {\n});\nclass $9806afdc43a432b0$var$EmblaThumbnail extends HTMLElement {\n    constructor(){\n        super();\n    }\n    connectedCallback() {\n        this.addEventListener(\"click\", ()=>{\n            const slider = this.closest($9806afdc43a432b0$var$EMBLA_SLIDER_NAME) || document.getElementById(this.for);\n            slider.api.scrollTo(this.index);\n        });\n    }\n    static get observedAttributes() {\n        return [\n            \"for\",\n            \"index\"\n        ];\n    }\n    attributeChangedCallback(property, oldValue, newValue) {\n        if (oldValue === newValue) return;\n        this[property] = newValue;\n    }\n}\ncustomElements.define($9806afdc43a432b0$var$EMBLA_THUMBNAIL_NAME, $9806afdc43a432b0$var$EmblaThumbnail);\nclass $9806afdc43a432b0$var$EmblaNext extends HTMLElement {\n    constructor(){\n        super();\n    }\n    connectedCallback() {\n        this.addEventListener(\"click\", ()=>{\n            const slider = this.closest($9806afdc43a432b0$var$EMBLA_SLIDER_NAME) || document.getElementById(this.for);\n            console.log(slider);\n            slider.api?.scrollNext();\n        });\n    }\n    disable() {\n        this.setAttribute(\"disabled\", true);\n    }\n    enable() {\n        this.removeAttribute(\"disabled\");\n    }\n    static get observedAttributes() {\n        return [\n            \"for\"\n        ];\n    }\n    attributeChangedCallback(property, oldValue, newValue) {\n        if (oldValue === newValue) return;\n        this[property] = newValue;\n    }\n}\ncustomElements.define($9806afdc43a432b0$var$EMBLA_NEXT_NAME, $9806afdc43a432b0$var$EmblaNext);\nclass $9806afdc43a432b0$var$EmblaPrev extends HTMLElement {\n    constructor(){\n        super();\n    }\n    connectedCallback() {\n        this.addEventListener(\"click\", ()=>{\n            const slider = this.closest($9806afdc43a432b0$var$EMBLA_SLIDER_NAME) || document.getElementById(this.for);\n            console.log(slider);\n            slider.api?.scrollPrev();\n        });\n    }\n    disable() {\n        this.setAttribute(\"disabled\", true);\n    }\n    enable() {\n        this.removeAttribute(\"disabled\");\n    }\n    static get observedAttributes() {\n        return [\n            \"for\"\n        ];\n    }\n    attributeChangedCallback(property, oldValue, newValue) {\n        if (oldValue === newValue) return;\n        this[property] = newValue;\n    }\n}\ncustomElements.define($9806afdc43a432b0$var$EMBLA_PREV_NAME, $9806afdc43a432b0$var$EmblaPrev);\nclass $9806afdc43a432b0$var$EmblaProgress extends HTMLElement {\n    constructor(){\n        super();\n    }\n    connectedCallback() {}\n    update() {\n        const slider = this.closest($9806afdc43a432b0$var$EMBLA_SLIDER_NAME) || document.getElementById(this.for);\n        const progress = Math.max(0, Math.min(1, slider.api?.scrollProgress() ?? 0));\n        this.style.setProperty(\"--progress\", `${progress * 100}%`);\n    }\n    static get observedAttributes() {\n        return [\n            \"for\"\n        ];\n    }\n    attributeChangedCallback(property, oldValue, newValue) {\n        if (oldValue === newValue) return;\n        this[property] = newValue;\n    }\n}\ncustomElements.define($9806afdc43a432b0$var$EMBLA_PROGRESS_NAME, $9806afdc43a432b0$var$EmblaProgress);\nclass $9806afdc43a432b0$var$EmblaSlider extends HTMLElement {\n    static VERSION = \"1.0.0\";\n    static BREAKPOINT_SMALL = \"(max-width: 576px)\";\n    static BREAKPOINT_MEDIUM = \"(max-width: 992px)\";\n    static OPTIONS_PROPERTIES = [\n        \"options\",\n        \"options-medium\",\n        \"options-small\"\n    ];\n    constructor(){\n        super();\n    }\n    connectedCallback() {\n        this.autoplay = this.getAttribute(\"autoplay\") || 0;\n        this.style.setProperty(\"--autoplay-speed\", `${this.autoplay}ms`);\n        this.autoHeight = this.hasAttribute(\"auto-height\") || false;\n        this.autoScroll = this.hasAttribute(\"auto-scroll\") || false;\n        this.fade = this.hasAttribute(\"fade\") || false;\n        this.pauseOnHover = this.hasAttribute(\"pause-on-hover\");\n        this.plugins = [\n            EmblaCarouselClassNames(),\n            EmblaCarouselWheelGestures()\n        ];\n        if (this.autoHeight) this.plugins.push(EmblaCarouselAutoScroll({\n            playOnInit: false\n        }));\n        if (this.autoScroll) this.plugins.push(EmblaCarouselAutoHeight());\n        if (this.fade) this.plugins.push(EmblaCarouselFade());\n        if (this.autoplay != 0) this.plugins.push(EmblaCarouselAutoplay({\n            stopOnMouseEnter: this.pauseOnHover,\n            delay: this.autoplay,\n            playOnInit: true\n        }));\n        this.buildOptions();\n        this.updateAttributeByResponsiveOptions(\"loop\");\n        this.viewport = this.querySelector($9806afdc43a432b0$var$EMBLA_VIEWPORT_NAME);\n        this.api = EmblaCarousel(this.viewport, this.options, this.plugins);\n        window.addEventListener(\"resize\", ()=>{\n            this.updateAttributeByResponsiveOptions(\"loop\");\n        });\n        window.addEventListener(\"shopify:block:select\", (e)=>{\n            const blockId = e.detail.blockId;\n            const blockIndex = Array.from(this.api.slideNodes()).findIndex((slide)=>slide.hasAttribute(\"data-shopify-editor-block\") && JSON.parse(slide.getAttribute(\"data-shopify-editor-block\")).id == blockId);\n            if (blockIndex != -1) this.api.scrollTo(Number(blockIndex));\n        });\n        this.api.on(\"select\", ()=>{\n            this.updateControls();\n            this.updateThumbnails();\n        });\n        this.api.on(\"init\", ()=>{\n            console.log(\"Init\");\n            this.updateControls();\n            this.updateProgress();\n            this.updateThumbnails();\n        });\n        this.api.on(\"reInit\", ()=>{\n            this.updateControls();\n            this.updateProgress();\n            this.updateThumbnails();\n        });\n        this.api.on(\"scroll\", ()=>{\n            this.updateProgress();\n        });\n        this.api.on(\"slideFocus\", ()=>{\n            this.updateProgress();\n        });\n        this.api.on(\"destroy\", ()=>{});\n    }\n    updateAttributeByResponsiveOptions(attribute) {\n        if (window.matchMedia($9806afdc43a432b0$var$EmblaSlider.BREAKPOINT_SMALL).matches) {\n            const optionValue = this.options.breakpoints[$9806afdc43a432b0$var$EmblaSlider.BREAKPOINT_SMALL][$9806afdc43a432b0$var$camelize(attribute)];\n            optionValue ? this.setAttribute(attribute, true) : this.removeAttribute(attribute);\n        } else {\n            const optionValue = this.options[$9806afdc43a432b0$var$camelize(attribute)];\n            optionValue ? this.setAttribute(attribute, true) : this.removeAttribute(attribute);\n        }\n    }\n    buildOptions() {\n        this.options = {\n            ...this.options,\n            container: $9806afdc43a432b0$var$EMBLA_CONTAINER_NAME,\n            breakpoints: {\n                [$9806afdc43a432b0$var$EmblaSlider.BREAKPOINT_MEDIUM]: {\n                    ...this.options,\n                    ...this.optionsMedium\n                },\n                [$9806afdc43a432b0$var$EmblaSlider.BREAKPOINT_SMALL]: {\n                    ...this.options,\n                    ...this.optionsSmall\n                }\n            }\n        };\n    }\n    parseOptions(options) {\n        return Object.fromEntries(options.split(\",\").map((option)=>{\n            const [key, value] = option.split(\":\");\n            if (value.match(/true|false/g)) // is boolean value\n            return [\n                key.trim(),\n                value.trim() == \"true\"\n            ];\n            if (value.match(/[0-9]+/g)) // is number\n            return [\n                key.trim(),\n                Number(value.trim())\n            ];\n            return [\n                key.trim(),\n                value.trim()\n            ];\n        }));\n    }\n    updateControls() {\n        const nexts = [\n            ...document.querySelectorAll(`${$9806afdc43a432b0$var$EMBLA_NEXT_NAME}[for=\"${this.id}\"]`),\n            ...this.querySelectorAll(`${$9806afdc43a432b0$var$EMBLA_NEXT_NAME}`)\n        ];\n        nexts.forEach((n)=>this.api.canScrollNext() ? n.enable() : n.disable());\n        const prevs = [\n            ...document.querySelectorAll(`${$9806afdc43a432b0$var$EMBLA_PREV_NAME}[for=\"${this.id}\"]`),\n            ...this.querySelectorAll(`${$9806afdc43a432b0$var$EMBLA_PREV_NAME}`)\n        ];\n        prevs.forEach((n)=>this.api.canScrollPrev() ? n.enable() : n.disable());\n    }\n    updateProgress() {\n        const progress = [\n            ...document.querySelectorAll(`${$9806afdc43a432b0$var$EMBLA_PROGRESS_NAME}[for=\"${this.id}\"]`),\n            ...this.querySelectorAll(`${$9806afdc43a432b0$var$EMBLA_PROGRESS_NAME}`)\n        ];\n        progress.forEach((n)=>n.update());\n    }\n    updateThumbnails() {\n        const thumbnails = [\n            ...document.querySelectorAll(`${$9806afdc43a432b0$var$EMBLA_THUMBNAIL_NAME}[for=\"${this.id}\"]`),\n            ...this.querySelectorAll(`${$9806afdc43a432b0$var$EMBLA_THUMBNAIL_NAME}`)\n        ];\n        thumbnails.forEach((t)=>t.classList.remove(\"is-selected\"));\n        thumbnails.filter((t)=>t.index == this.api.selectedScrollSnap()).forEach((t)=>t.classList.add(\"is-selected\"));\n    }\n    static get observedAttributes() {\n        return [\n            \"id\",\n            ...$9806afdc43a432b0$var$EmblaSlider.OPTIONS_PROPERTIES\n        ];\n    }\n    attributeChangedCallback(property, oldValue, newValue) {\n        if (oldValue === newValue) return;\n        const jsProperty = $9806afdc43a432b0$var$camelize(property);\n        if ($9806afdc43a432b0$var$EmblaSlider.OPTIONS_PROPERTIES.includes(property)) {\n            // parse string before assignment\n            this[jsProperty] = this.parseOptions(newValue);\n            this.buildOptions();\n            return;\n        }\n        this[jsProperty] = newValue;\n    }\n}\ncustomElements.define($9806afdc43a432b0$var$EMBLA_SLIDER_NAME, $9806afdc43a432b0$var$EmblaSlider);\n\n})();\n//# sourceMappingURL=embla-slider-component.js.map\n","const EMBLA_SLIDE_NAME = \"embla-slide\";\nconst EMBLA_CONTAINER_NAME = \"embla-slides\";\nconst EMBLA_VIEWPORT_NAME = \"embla-viewport\";\nconst EMBLA_NEXT_NAME = \"embla-next\";\nconst EMBLA_PREV_NAME = \"embla-prev\";\nconst EMBLA_SLIDER_NAME = \"embla-slider\";\nconst EMBLA_PROGRESS_NAME = \"embla-progress\";\nconst EMBLA_THUMBNAIL_NAME = \"embla-thumbnail\";\n\nconst camelize = (s) => s.replace(/-./g, (x) => x[1].toUpperCase());\n\ncustomElements.define(EMBLA_CONTAINER_NAME, class extends HTMLElement {});\ncustomElements.define(EMBLA_SLIDE_NAME, class extends HTMLElement {});\ncustomElements.define(EMBLA_VIEWPORT_NAME, class extends HTMLElement {});\nclass EmblaThumbnail extends HTMLElement {\n  constructor() {\n    super();\n  }\n  connectedCallback() {\n    this.addEventListener(\"click\", () => {\n      const slider = this.closest(EMBLA_SLIDER_NAME) || document.getElementById(this.for);\n      slider.api.scrollTo(this.index);\n    });\n  }\n  static get observedAttributes() {\n    return [\"for\", \"index\"];\n  }\n  attributeChangedCallback(property, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    this[property] = newValue;\n  }\n}\ncustomElements.define(EMBLA_THUMBNAIL_NAME, EmblaThumbnail);\nclass EmblaNext extends HTMLElement {\n  constructor() {\n    super();\n  }\n  connectedCallback() {\n    this.addEventListener(\"click\", () => {\n      const slider = this.closest(EMBLA_SLIDER_NAME) || document.getElementById(this.for);\n      console.log(slider);\n      slider.api?.scrollNext();\n    });\n  }\n  disable() {\n    this.setAttribute(\"disabled\", true);\n  }\n  enable() {\n    this.removeAttribute(\"disabled\");\n  }\n  static get observedAttributes() {\n    return [\"for\"];\n  }\n  attributeChangedCallback(property, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    this[property] = newValue;\n  }\n}\ncustomElements.define(EMBLA_NEXT_NAME, EmblaNext);\nclass EmblaPrev extends HTMLElement {\n  constructor() {\n    super();\n  }\n  connectedCallback() {\n    this.addEventListener(\"click\", () => {\n      const slider = this.closest(EMBLA_SLIDER_NAME) || document.getElementById(this.for);\n      console.log(slider);\n      slider.api?.scrollPrev();\n    });\n  }\n  disable() {\n    this.setAttribute(\"disabled\", true);\n  }\n  enable() {\n    this.removeAttribute(\"disabled\");\n  }\n  static get observedAttributes() {\n    return [\"for\"];\n  }\n  attributeChangedCallback(property, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    this[property] = newValue;\n  }\n}\ncustomElements.define(EMBLA_PREV_NAME, EmblaPrev);\nclass EmblaProgress extends HTMLElement {\n  constructor() {\n    super();\n  }\n  connectedCallback() {}\n  update() {\n    const slider = this.closest(EMBLA_SLIDER_NAME) || document.getElementById(this.for);\n    const progress = Math.max(0, Math.min(1, slider.api?.scrollProgress() ?? 0));\n    this.style.setProperty(\"--progress\", `${progress * 100}%`);\n  }\n  static get observedAttributes() {\n    return [\"for\"];\n  }\n  attributeChangedCallback(property, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    this[property] = newValue;\n  }\n}\ncustomElements.define(EMBLA_PROGRESS_NAME, EmblaProgress);\nclass EmblaSlider extends HTMLElement {\n  static VERSION = \"1.0.0\";\n  static BREAKPOINT_SMALL = \"(max-width: 576px)\";\n  static BREAKPOINT_MEDIUM = \"(max-width: 992px)\";\n  static OPTIONS_PROPERTIES = [\"options\", \"options-medium\", \"options-small\"];\n\n  constructor() {\n    super();\n  }\n  connectedCallback() {\n    this.autoplay = this.getAttribute(\"autoplay\") || 0;\n    this.style.setProperty(\"--autoplay-speed\", `${this.autoplay}ms`);\n    this.autoHeight = this.hasAttribute(\"auto-height\") || false;\n    this.autoScroll = this.hasAttribute(\"auto-scroll\") || false;\n    this.fade = this.hasAttribute(\"fade\") || false;\n    this.pauseOnHover = this.hasAttribute(\"pause-on-hover\");\n    this.plugins = [EmblaCarouselClassNames(), EmblaCarouselWheelGestures()];\n    if (this.autoHeight) {\n      this.plugins.push(EmblaCarouselAutoScroll({ playOnInit: false }));\n    }\n    if (this.autoScroll) {\n      this.plugins.push(EmblaCarouselAutoHeight());\n    }\n    if (this.fade) {\n      this.plugins.push(EmblaCarouselFade());\n    }\n    if (this.autoplay != 0) {\n      this.plugins.push(\n        EmblaCarouselAutoplay({\n          stopOnMouseEnter: this.pauseOnHover,\n          delay: this.autoplay,\n          playOnInit: true,\n        }),\n      );\n    }\n\n    this.buildOptions();\n    this.updateAttributeByResponsiveOptions(\"loop\");\n\n    this.viewport = this.querySelector(EMBLA_VIEWPORT_NAME);\n\n    this.api = EmblaCarousel(this.viewport, this.options, this.plugins);\n\n    window.addEventListener(\"resize\", () => {\n      this.updateAttributeByResponsiveOptions(\"loop\");\n    });\n\n    window.addEventListener(\"shopify:block:select\", (e) => {\n      const blockId = e.detail.blockId;\n      const blockIndex = Array.from(this.api.slideNodes()).findIndex(\n        (slide) =>\n          slide.hasAttribute(\"data-shopify-editor-block\") &&\n          JSON.parse(slide.getAttribute(\"data-shopify-editor-block\")).id == blockId,\n      );\n      if (blockIndex != -1) this.api.scrollTo(Number(blockIndex));\n    });\n\n    this.api.on(\"select\", () => {\n      this.updateControls();\n      this.updateThumbnails();\n    });\n    this.api.on(\"init\", () => {\n      console.log(\"Init\");\n      this.updateControls();\n      this.updateProgress();\n      this.updateThumbnails();\n    });\n    this.api.on(\"reInit\", () => {\n      this.updateControls();\n      this.updateProgress();\n      this.updateThumbnails();\n    });\n    this.api.on(\"scroll\", () => {\n      this.updateProgress();\n    });\n    this.api.on(\"slideFocus\", () => {\n      this.updateProgress();\n    });\n    this.api.on(\"destroy\", () => {});\n  }\n  updateAttributeByResponsiveOptions(attribute) {\n    if (window.matchMedia(EmblaSlider.BREAKPOINT_SMALL).matches) {\n      const optionValue = this.options.breakpoints[EmblaSlider.BREAKPOINT_SMALL][camelize(attribute)];\n      optionValue ? this.setAttribute(attribute, true) : this.removeAttribute(attribute);\n    } else {\n      const optionValue = this.options[camelize(attribute)];\n      optionValue ? this.setAttribute(attribute, true) : this.removeAttribute(attribute);\n    }\n  }\n  buildOptions() {\n    this.options = {\n      ...this.options,\n      container: EMBLA_CONTAINER_NAME,\n      breakpoints: {\n        [EmblaSlider.BREAKPOINT_MEDIUM]: {\n          ...this.options,\n          ...this.optionsMedium,\n        },\n        [EmblaSlider.BREAKPOINT_SMALL]: {\n          ...this.options,\n          ...this.optionsSmall,\n        },\n      },\n    };\n  }\n  parseOptions(options) {\n    return Object.fromEntries(\n      options.split(\",\").map((option) => {\n        const [key, value] = option.split(\":\");\n        if (value.match(/true|false/g)) {\n          // is boolean value\n          return [key.trim(), value.trim() == \"true\"];\n        }\n        if (value.match(/[0-9]+/g)) {\n          // is number\n          return [key.trim(), Number(value.trim())];\n        }\n        return [key.trim(), value.trim()];\n      }),\n    );\n  }\n  updateControls() {\n    const nexts = [\n      ...document.querySelectorAll(`${EMBLA_NEXT_NAME}[for=\"${this.id}\"]`),\n      ...this.querySelectorAll(`${EMBLA_NEXT_NAME}`),\n    ];\n    nexts.forEach((n) => (this.api.canScrollNext() ? n.enable() : n.disable()));\n    const prevs = [\n      ...document.querySelectorAll(`${EMBLA_PREV_NAME}[for=\"${this.id}\"]`),\n      ...this.querySelectorAll(`${EMBLA_PREV_NAME}`),\n    ];\n    prevs.forEach((n) => (this.api.canScrollPrev() ? n.enable() : n.disable()));\n  }\n  updateProgress() {\n    const progress = [\n      ...document.querySelectorAll(`${EMBLA_PROGRESS_NAME}[for=\"${this.id}\"]`),\n      ...this.querySelectorAll(`${EMBLA_PROGRESS_NAME}`),\n    ];\n    progress.forEach((n) => n.update());\n  }\n  updateThumbnails() {\n    const thumbnails = [\n      ...document.querySelectorAll(`${EMBLA_THUMBNAIL_NAME}[for=\"${this.id}\"]`),\n      ...this.querySelectorAll(`${EMBLA_THUMBNAIL_NAME}`),\n    ];\n    thumbnails.forEach((t) => t.classList.remove(\"is-selected\"));\n    thumbnails.filter((t) => t.index == this.api.selectedScrollSnap()).forEach((t) => t.classList.add(\"is-selected\"));\n  }\n  static get observedAttributes() {\n    return [\"id\", ...EmblaSlider.OPTIONS_PROPERTIES];\n  }\n  attributeChangedCallback(property, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    const jsProperty = camelize(property);\n    if (EmblaSlider.OPTIONS_PROPERTIES.includes(property)) {\n      // parse string before assignment\n      this[jsProperty] = this.parseOptions(newValue);\n      this.buildOptions();\n      return;\n    }\n    this[jsProperty] = newValue;\n  }\n}\n\ncustomElements.define(EMBLA_SLIDER_NAME, EmblaSlider);\n"],"names":["$9806afdc43a432b0$var$EMBLA_CONTAINER_NAME","$9806afdc43a432b0$var$EMBLA_VIEWPORT_NAME","$9806afdc43a432b0$var$EMBLA_NEXT_NAME","$9806afdc43a432b0$var$EMBLA_PREV_NAME","$9806afdc43a432b0$var$EMBLA_SLIDER_NAME","$9806afdc43a432b0$var$EMBLA_PROGRESS_NAME","$9806afdc43a432b0$var$EMBLA_THUMBNAIL_NAME","$9806afdc43a432b0$var$camelize","s","replace","x","toUpperCase","customElements","define","HTMLElement","$9806afdc43a432b0$var$EmblaThumbnail","constructor","connectedCallback","addEventListener","slider","closest","document","getElementById","for","api","scrollTo","index","observedAttributes","attributeChangedCallback","property","oldValue","newValue","$9806afdc43a432b0$var$EmblaNext","console","log","scrollNext","disable","setAttribute","enable","removeAttribute","$9806afdc43a432b0$var$EmblaPrev","scrollPrev","$9806afdc43a432b0$var$EmblaProgress","update","progress","Math","max","min","scrollProgress","style","setProperty","$9806afdc43a432b0$var$EmblaSlider","VERSION","BREAKPOINT_SMALL","BREAKPOINT_MEDIUM","OPTIONS_PROPERTIES","autoplay","getAttribute","autoHeight","hasAttribute","autoScroll","fade","pauseOnHover","plugins","EmblaCarouselClassNames","EmblaCarouselWheelGestures","push","EmblaCarouselAutoScroll","playOnInit","EmblaCarouselAutoHeight","EmblaCarouselFade","EmblaCarouselAutoplay","stopOnMouseEnter","delay","buildOptions","updateAttributeByResponsiveOptions","viewport","querySelector","EmblaCarousel","options","window","e","blockId","detail","blockIndex","Array","from","slideNodes","findIndex","slide","JSON","parse","id","Number","on","updateControls","updateThumbnails","updateProgress","attribute","matchMedia","matches","optionValue","breakpoints","container","optionsMedium","optionsSmall","parseOptions","Object","fromEntries","split","map","option","key","value","match","trim","nexts","querySelectorAll","forEach","n","canScrollNext","prevs","canScrollPrev","thumbnails","t","classList","remove","filter","selectedScrollSnap","add","jsProperty","includes"],"version":3,"file":"embla-slider-component.js.map"}