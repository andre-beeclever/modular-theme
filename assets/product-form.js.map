{"mappings":"C,A,WCAA,MAAM,UAA2B,YAC/B,aAAc,CACZ,KAAK,EACP,CACA,mBAAoB,CAClB,IAAM,EAAO,IAAI,CAAC,OAAO,CAAC,QACpB,EAAY,IAAI,CAAC,YAAY,CAAC,cAC9B,EAAa,IAAI,CAAC,YAAY,CAAC,eACrC,GAAK,EAAK,CACR,IAAM,EAAiB,EAAK,aAAa,CAAC,eACpC,EAAkB,EAAK,aAAa,CAAC,gBAC3C,IAAI,CAAC,gBAAgB,CAAC,QAAS,KAC7B,EAAgB,KAAK,CAAG,EACxB,EAAe,KAAK,CAAG,EACvB,EAAgB,aAAa,CAAC,IAAI,MAAM,UACxC,EAAe,aAAa,CAAC,IAAI,MAAM,SACzC,EACF,CACF,CACF,CACA,eAAe,MAAM,CAAC,uBAAwB,EAE9C,OAAM,UAAoB,YACxB,aAAc,CACZ,KAAK,EACP,CACA,IAAI,SAAU,CACZ,OAAO,IAAI,CAAC,YAAY,CAAC,YAAc,cACzC,CACA,YAAa,CACX,IAAM,EAAkB,IAAI,CAAC,aAAa,CAAC,qBACrC,EAAiB,IAAI,CAAC,aAAa,CAAC,oBACpC,EAAmB,IAAI,CAAC,aAAa,CAAC,8BACtC,EAAW,IAAI,IAAI,SACzB,CAAA,EAAS,QAAQ,CAAG,EAAgB,KAAK,CACpC,GAAgB,OACnB,EAAS,YAAY,CAAC,GAAG,CAAC,UAAW,EAAe,KAAK,EAEtD,GAAkB,OACrB,EAAS,YAAY,CAAC,GAAG,CAAC,eAAgB,EAAiB,KAAK,EAElE,QAAQ,YAAY,CAAC,KAAM,GAAI,EAAS,IAAI,EAC5C,EAAS,YAAY,CAAC,GAAG,CAAC,WAAY,IAAI,CAAC,OAAO,EAClD,IAAI,CAAC,OAAO,CAAG,CAAA,EACf,MAAM,EAAS,IAAI,EAClB,IAAI,CAAC,AAAC,GAAQ,EAAI,IAAI,IACtB,IAAI,CAAC,AAAC,IACL,IAAM,EAAO,CAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CACxB,EAAW,SAAS,aAAa,CAAC,WACxC,CAAA,EAAS,SAAS,CAAG,EAAK,IAAI,GAC9B,IAAM,EAAW,EAAS,OAAO,CAAC,aAAa,CAAC,gBAChD,IAAI,CAAC,WAAW,CAAC,GACjB,IAAI,CAAC,OAAO,CAAG,CAAA,CACjB,GACC,KAAK,CAAC,AAAC,IACN,QAAQ,KAAK,CAAC,GACd,IAAI,CAAC,OAAO,CAAG,CAAA,CACjB,EACF,CACA,mBAAoB,CAClB,IAAM,EAAiB,IAAI,CAAC,aAAa,CAAC,oBACpC,EAAmB,IAAI,CAAC,aAAa,CAAC,8BAC5C,GAAgB,iBAAiB,QAAS,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,GACnE,GAAkB,iBAAiB,QAAS,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EACvE,CACF,CACA,eAAe,MAAM,CAAC,eAAgB,E","sources":["<anon>","src/js/product-form.js"],"sourcesContent":["(function () {\nclass $ca2090b541c673d4$var$ProductOptionValue extends HTMLElement {\n    constructor(){\n        super();\n    }\n    connectedCallback() {\n        const form = this.closest(\"form\");\n        const variantId = this.getAttribute(\"variant-id\");\n        const productUrl = this.getAttribute(\"product-url\");\n        if (!!form) {\n            const variantIdInput = form.querySelector(`[name=\"id\"]`);\n            const productUrlInput = form.querySelector(`[name=\"url\"]`);\n            this.addEventListener(\"click\", ()=>{\n                productUrlInput.value = productUrl;\n                variantIdInput.value = variantId;\n                productUrlInput.dispatchEvent(new Event(\"input\"));\n                variantIdInput.dispatchEvent(new Event(\"input\"));\n            });\n        }\n    }\n}\ncustomElements.define(\"product-option-value\", $ca2090b541c673d4$var$ProductOptionValue);\nclass $ca2090b541c673d4$var$ProductForm extends HTMLElement {\n    constructor(){\n        super();\n    }\n    get section() {\n        return this.getAttribute(\"section\") || \"product-main\";\n    }\n    updateView() {\n        const productUrlInput = this.querySelector(`form [name=\"url\"]`);\n        const variantIdInput = this.querySelector(`form [name=\"id\"]`);\n        const sellingPlanInput = this.querySelector(`form [name=\"selling_plan\"]`);\n        const fetchUrl = new URL(location);\n        fetchUrl.pathname = productUrlInput.value;\n        if (!!variantIdInput?.value) fetchUrl.searchParams.set(\"variant\", variantIdInput.value);\n        if (!!sellingPlanInput?.value) fetchUrl.searchParams.set(\"selling_plan\", sellingPlanInput.value);\n        history.replaceState(null, \"\", fetchUrl.href);\n        fetchUrl.searchParams.set(\"sections\", this.section);\n        this.loading = true;\n        fetch(fetchUrl.href).then((res)=>res.json()).then((res)=>{\n            const data = res[this.section];\n            const template = document.createElement(\"template\");\n            template.innerHTML = data.trim();\n            const new_form = template.content.querySelector(\"product-form\");\n            this.replaceWith(new_form);\n            this.loading = false;\n        }).catch((err)=>{\n            console.error(err);\n            this.loading = false;\n        });\n    }\n    connectedCallback() {\n        const variantIdInput = this.querySelector(`form [name=\"id\"]`);\n        const sellingPlanInput = this.querySelector(`form [name=\"selling_plan\"]`);\n        variantIdInput?.addEventListener(\"input\", this.updateView.bind(this));\n        sellingPlanInput?.addEventListener(\"input\", this.updateView.bind(this));\n    }\n}\ncustomElements.define(\"product-form\", $ca2090b541c673d4$var$ProductForm);\n\n})();\n//# sourceMappingURL=product-form.js.map\n","class ProductOptionValue extends HTMLElement {\n  constructor() {\n    super();\n  }\n  connectedCallback() {\n    const form = this.closest('form');\n    const variantId = this.getAttribute('variant-id');\n    const productUrl = this.getAttribute('product-url');\n    if(!!form){\n      const variantIdInput = form.querySelector(`[name=\"id\"]`);\n      const productUrlInput = form.querySelector(`[name=\"url\"]`);\n      this.addEventListener('click', () => {\n        productUrlInput.value = productUrl;\n        variantIdInput.value = variantId;\n        productUrlInput.dispatchEvent(new Event('input'));\n        variantIdInput.dispatchEvent(new Event('input'));\n      });\n    }\n  }\n}\ncustomElements.define(\"product-option-value\", ProductOptionValue);\n\nclass ProductForm extends HTMLElement {\n  constructor() {\n    super();\n  }\n  get section() {\n    return this.getAttribute(\"section\") || \"product-main\";\n  }\n  updateView() {\n    const productUrlInput = this.querySelector(`form [name=\"url\"]`);\n    const variantIdInput = this.querySelector(`form [name=\"id\"]`);\n    const sellingPlanInput = this.querySelector(`form [name=\"selling_plan\"]`);\n    const fetchUrl = new URL(location);\n    fetchUrl.pathname = productUrlInput.value;\n    if(!!variantIdInput?.value) {\n      fetchUrl.searchParams.set('variant', variantIdInput.value);\n    }\n    if(!!sellingPlanInput?.value) {\n      fetchUrl.searchParams.set('selling_plan', sellingPlanInput.value);\n    }\n    history.replaceState(null, \"\", fetchUrl.href);\n    fetchUrl.searchParams.set('sections', this.section);\n    this.loading = true;\n    fetch(fetchUrl.href)\n    .then((res) => res.json())\n    .then((res) => {\n      const data = res[this.section];\n      const template = document.createElement(\"template\");\n      template.innerHTML = data.trim();\n      const new_form = template.content.querySelector('product-form');\n      this.replaceWith(new_form);\n      this.loading = false;\n    })\n    .catch((err) => {\n      console.error(err);\n      this.loading = false;\n    });\n  }\n  connectedCallback() {\n    const variantIdInput = this.querySelector(`form [name=\"id\"]`);\n    const sellingPlanInput = this.querySelector(`form [name=\"selling_plan\"]`);\n    variantIdInput?.addEventListener('input', this.updateView.bind(this));\n    sellingPlanInput?.addEventListener('input', this.updateView.bind(this));\n  }\n}\ncustomElements.define(\"product-form\", ProductForm);"],"names":["$ca2090b541c673d4$var$ProductOptionValue","HTMLElement","constructor","connectedCallback","form","closest","variantId","getAttribute","productUrl","variantIdInput","querySelector","productUrlInput","addEventListener","value","dispatchEvent","Event","customElements","define","$ca2090b541c673d4$var$ProductForm","section","updateView","sellingPlanInput","fetchUrl","URL","location","pathname","searchParams","set","history","replaceState","href","loading","fetch","then","res","json","data","template","document","createElement","innerHTML","trim","new_form","content","replaceWith","catch","err","console","error","bind"],"version":3,"file":"product-form.js.map"}