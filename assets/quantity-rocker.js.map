{"mappings":"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","sources":["<anon>","src/js/quantity-rocker.ts"],"sourcesContent":["(function () {\nclass $4c27760ac57c7c67$var$QuantityRocker extends HTMLElement {\n    #value;\n    #min;\n    #max;\n    #shadow;\n    #shadowDecement;\n    #shadowInput;\n    #shadowIncrement;\n    constructor(){\n        super();\n        this.#value = 1;\n        this.#min = 0;\n        this.#max = 999;\n        this.#shadow = null;\n        this.#shadowDecement = null;\n        this.#shadowInput = null;\n        this.#shadowIncrement = null;\n        this.#shadow = this.attachShadow({\n            mode: \"open\"\n        });\n    }\n    connectedCallback() {\n        this.render();\n    }\n    render() {\n        this.#shadow.innerHTML = `\n      <style>\n        input::-webkit-outer-spin-button,input::-webkit-inner-spin-button {-webkit-appearance: none; margin: 0;}\n        input:focus{outline: none;}\n      </style>\n      <div part=\"wrapper\">\n          <button part=\"decrement\" ${this.value == this.min ? \"disabled\" : \"\"}>-</button>\n          <input part=\"input\" type=\"number\" value=\"${this.value}\" min=\"${this.min}\" max=\"${this.max}\">\n          <button part=\"increment\" ${this.value == this.max ? \"disabled\" : \"\"}>+</button>\n      </div>\n    `;\n        this.#shadowDecement = this.#shadow.querySelector('[part=\"decrement\"]');\n        this.#shadowDecement.addEventListener(\"click\", ()=>{\n            this.value = Number(this.value) - 1;\n            this.update();\n        });\n        this.#shadowInput = this.#shadow.querySelector('[part=\"input\"]');\n        this.#shadowInput.addEventListener(\"change\", ()=>{\n            this.value = Number(this.#shadowInput.value);\n            this.update();\n        });\n        this.#shadowIncrement = this.#shadow.querySelector('[part=\"increment\"]');\n        this.#shadowIncrement.addEventListener(\"click\", ()=>{\n            this.value = Number(this.value) + 1;\n            this.update();\n        });\n    }\n    update() {\n        this.dispatchEvent(new Event(\"change\"));\n        this.render();\n    }\n    set value(v) {\n        const clampedValue = Math.max(this.#min, Math.min(this.#max, Number(v)));\n        this.#value = clampedValue;\n        this.setAttribute(\"value\", clampedValue);\n    }\n    get value() {\n        return this.#value;\n    }\n    set min(v) {\n        this.#min = Number(v);\n        this.setAttribute(\"min\", v);\n    }\n    get min() {\n        return this.#min;\n    }\n    set max(v) {\n        this.#max = Number(v);\n        this.setAttribute(\"max\", v);\n    }\n    get max() {\n        return this.#max;\n    }\n    static get observedAttributes() {\n        return [\n            \"value\",\n            \"id\",\n            \"min\",\n            \"max\"\n        ];\n    }\n    attributeChangedCallback(property, oldValue, newValue) {\n        if (oldValue === newValue) return;\n        this[property] = newValue;\n        this.render();\n    }\n}\ncustomElements.define(\"quantity-rocker\", $4c27760ac57c7c67$var$QuantityRocker);\n\n})();\n//# sourceMappingURL=quantity-rocker.js.map\n","class QuantityRocker extends HTMLElement {\n  #value = 1;\n  #min = 0;\n  #max = 999;\n  #shadow = null;\n  #shadowDecement = null;\n  #shadowInput = null;\n  #shadowIncrement = null;\n\n  constructor() {\n    super();\n    this.#shadow = this.attachShadow({ mode: \"open\" });\n  }\n  connectedCallback() {\n    this.render();\n  }\n\n  render() {\n    this.#shadow.innerHTML = `\n      <style>\n        input::-webkit-outer-spin-button,input::-webkit-inner-spin-button {-webkit-appearance: none; margin: 0;}\n        input:focus{outline: none;}\n      </style>\n      <div part=\"wrapper\">\n          <button part=\"decrement\" ${this.value == this.min ? \"disabled\" : \"\"}>-</button>\n          <input part=\"input\" type=\"number\" value=\"${this.value}\" min=\"${this.min}\" max=\"${this.max}\">\n          <button part=\"increment\" ${this.value == this.max ? \"disabled\" : \"\"}>+</button>\n      </div>\n    `;\n    this.#shadowDecement = this.#shadow.querySelector('[part=\"decrement\"]');\n    this.#shadowDecement.addEventListener(\"click\", () => {\n      this.value = Number(this.value) - 1;\n      this.update();\n    });\n    this.#shadowInput = this.#shadow.querySelector('[part=\"input\"]');\n    this.#shadowInput.addEventListener(\"change\", () => {\n      this.value = Number(this.#shadowInput.value);\n      this.update();\n    });\n    this.#shadowIncrement = this.#shadow.querySelector('[part=\"increment\"]');\n    this.#shadowIncrement.addEventListener(\"click\", () => {\n      this.value = Number(this.value) + 1;\n      this.update();\n    });\n  }\n  update() {\n    this.dispatchEvent(new Event(\"change\"));\n    this.render();\n  }\n  set value(v) {\n    const clampedValue = Math.max(this.#min, Math.min(this.#max, Number(v)));\n    this.#value = clampedValue;\n    this.setAttribute(\"value\", clampedValue);\n  }\n  get value() {\n    return this.#value;\n  }\n  set min(v) {\n    this.#min = Number(v);\n    this.setAttribute(\"min\", v);\n  }\n  get min() {\n    return this.#min;\n  }\n  set max(v) {\n    this.#max = Number(v);\n    this.setAttribute(\"max\", v);\n  }\n  get max() {\n    return this.#max;\n  }\n\n  static get observedAttributes() {\n    return [\"value\", \"id\", \"min\", \"max\"];\n  }\n  attributeChangedCallback(property, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    this[property] = newValue;\n    this.render();\n  }\n}\ncustomElements.define(\"quantity-rocker\", QuantityRocker);\n"],"names":["$4c27760ac57c7c67$var$QuantityRocker","HTMLElement","constructor","attachShadow","mode","connectedCallback","render","innerHTML","value","min","max","querySelector","addEventListener","Number","update","dispatchEvent","Event","v","clampedValue","Math","setAttribute","observedAttributes","attributeChangedCallback","property","oldValue","newValue","customElements","define"],"version":3,"file":"quantity-rocker.js.map"}