!function(){window.theme=window.theme||{},window.theme.scroll=window.theme.scroll||function(){let e=0,t=!0,n=()=>{let e=document.createElement("div");e.className="scrollbar-measure",document.body.appendChild(e);let t=e.offsetWidth-e.clientWidth;return document.body.removeChild(e),t};return{isEnabled:()=>t,disable:()=>{t=!1,e=window.scrollY,document.body.style.top=-window.scrollY+"px",window.innerWidth>576&&(document.body.style.paddingRight=`${n()}px`),document.body.style.position="fixed"},enable:()=>{t=!0,document.body.style.position="",document.body.style.top="",document.body.style.paddingRight="",window.scrollTo({top:e,behavior:"instant"})}}}();class e extends HTMLElement{static TAGS=["theme-modal","theme-alert","theme-notification","theme-drawer"];static TAG_NAMES=e.TAGS.map(e=>e.toUpperCase());constructor(){super()}connectedCallback(){this.addEventListener("click",t=>{let n=this.getAttribute("for"),o=document.getElementById(n)||this.closest(e.TAGS.join(","));if(console.log("target",o),!o){console.warn(`[${this.tagName}] Target not found.`);return}if(!e.TAG_NAMES.includes(o.tagName)){console.warn(`[${this.tagName}] Invalid target.`);return}o.toggle()})}static get observedAttributes(){return[]}attributeChangedCallback(e,t,n){t!==n&&(this[e]=n)}}customElements.define("theme-modal-button",e);class t extends HTMLElement{constructor(){super()}connectedCallback(){let e=this.hasAttribute("hide-on-blur");if(this.hasAttribute("hide-after")){let e=Number(this.getAttribute("hide-after")||1e4);this.addEventListener("opened",()=>{setTimeout(()=>{this.close()},e)})}e&&document.addEventListener("click",e=>{this.contains(e.target)||this.close()}),window.addEventListener("modal:open",e=>{e.detail.id==this.id&&this.open()}),window.addEventListener("modal:close",e=>{e.detail.id==this.id&&this.close()}),window.addEventListener("modal:toggle",e=>{e.detail.id==this.id&&this.toggle()})}get isScrollingEnabled(){return"disabled"!=this.getAttribute("scrolling")}isOpen(){return this.hasAttribute("open")}open(){this.setAttribute("open",!0)}close(){this.removeAttribute("open")}toggle(){console.log("toggle"),this.isOpen()?this.close():this.open()}static get observedAttributes(){return["open"]}attributeChangedCallback(e,t,n){if(t!==n){if("open"===e){"true"==n?(console.log("open"),this.isScrollingEnabled||(window.theme.scroll.disable(),console.warn(`[${this.tagName}] Disabled scroll.`)),this.dispatchEvent(new CustomEvent("opened"))):(console.log("close"),this.isScrollingEnabled||(window.theme.scroll.enable(),console.warn(`[${this.tagName}] Enabled scroll.`)),this.dispatchEvent(new CustomEvent("closed")));return}this[e]=n}}}customElements.define("theme-modal",t),customElements.define("theme-alert",class extends t{constructor(){super()}}),window.Shopify.theme.alert=(e,t={button:{label:"Close",class:"btn btn--primary"},container:{class:"flex col gap-small spacing-m"}})=>new Promise(n=>{let o=document.createElement("theme-alert");o.setAttribute("scrolling","disabled"),o.setAttribute("id",`alert-${crypto.randomUUID()}`),o.innerHTML=`
      <div class="${t.container.class}">
        <p>${e}</p>
        <theme-modal-button class="${t.button.class}">${t.button.label}</theme-modal-button>
      </div>
    `,document.body.appendChild(o),o.addEventListener("closed",()=>{o.remove(),n()}),o.open()}),customElements.define("theme-drawer",class extends t{constructor(){super()}}),customElements.define("theme-notification",class extends t{constructor(){super()}})}();
//# sourceMappingURL=theme-modal.js.map
