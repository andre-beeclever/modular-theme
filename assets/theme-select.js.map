{"mappings":"C,A,WCAA,MAAM,UAAoB,YACxB,OAAO,eAAiB,MAAO,AAC/B,EAAA,CAAY,CAAG,CAAA,CAAM,AACrB,EAAA,CAAQ,CAAG,EAAE,AAAC,AACd,EAAA,CAAM,AAAC,AACP,EAAA,CAAO,AAAC,AACR,EAAA,CAAc,AAAC,AACf,EAAA,CAAoB,AAAC,AACrB,cAAc,CACZ,KAAK,EACP,CACA,mBAAoB,CAClB,IAAI,CAAC,CAAA,CAAQ,CAAG,IAAI,CAAC,gBAAgB,CAAC,UACtC,IAAI,CAAC,oBAAoB,GACzB,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,cAAc,EAAE,OAAS,GAC3C,IAAI,CAAC,CAAA,CAAO,CAAG,IAAI,CAAC,YAAY,CAAC,CAAE,KAAM,MAAO,GAEhD,IAAI,CAAC,MAAM,GAEX,SAAS,IAAI,CAAC,gBAAgB,CAAC,QAAS,AAAC,IACvC,GAAI,IAAI,CAAC,MAAM,GAAI,CACjB,IAAM,EAAc,IAAI,CAAC,qBAAqB,EAE5C,CAAA,EAAE,OAAO,CAAG,EAAY,CAAC,EACzB,EAAE,OAAO,CAAG,EAAY,CAAC,CAAG,EAAY,KAAK,EAC7C,EAAE,OAAO,CAAG,EAAY,CAAC,EACzB,EAAE,OAAO,CAAG,EAAY,CAAC,CAAG,EAAY,MAAM,EAE9C,IAAI,CAAC,KAAK,EAEd,CACF,GAEA,IAAI,CAAC,CAAA,CAAY,CAAG,CAAA,CACtB,CACA,sBAAuB,CACrB,IAAM,EAAiB,MAAM,IAAI,CAAC,IAAI,CAAC,CAAA,CAAQ,EAAE,IAAI,CAAC,AAAC,GAAM,EAAE,YAAY,CAAC,aACtE,EAAkB,MAAM,IAAI,CAAC,IAAI,CAAC,CAAA,CAAQ,EAAE,IAAI,CAAC,AAAC,GAAM,EAAE,KAAK,EAAI,IAAI,CAAC,KAAK,EAC7E,EAAc,IAAI,CAAC,CAAA,CAAQ,CAAC,MAAM,CAAG,EAAI,IAAI,CAAC,CAAA,CAAQ,CAAC,EAAE,CAAG,IAClE,CAAA,IAAI,CAAC,cAAc,CAAG,GAAkB,GAAmB,EAChC,MAAvB,IAAI,CAAC,cAAc,EACrB,QAAQ,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAExE,CACA,QAAS,CACP,IAAI,CAAC,CAAA,CAAO,CAAC,SAAS,CAAG,CAAC;;cAEhB,EAAE,IAAI,CAAC,cAAc,EAAE,WAAa,GAAG;;;QAG7C,EAAE,MAAM,IAAI,CAAC,IAAI,CAAC,CAAA,CAAQ,EACvB,GAAG,CACF,AAAC,GACC,CAAC,qBAAqB,EAAE,IAAI,CAAC,cAAc,EAAI,EAAI,WAAa,GAAG,CAAC,EAAE,EAAE,QAAQ,CAAG,WAAa,GAAG,SAAS,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,EAAI,EAAI,WAAa,GAAG,CAAC,EAAE,EAAE,QAAQ,CAAG,WAAa,GAAG,CAAC,EAAE,EAAE,SAAS,CAAC,SAAS,CAAC,EAEjO,IAAI,CAAC,IAAI;;IAEhB,CAAC,CACD,IAAI,CAAC,CAAA,CAAc,CAAG,IAAI,CAAC,CAAA,CAAO,CAAC,gBAAgB,CAAC,UACpD,IAAI,CAAC,CAAA,CAAc,CAAC,OAAO,CAAC,AAAC,IAC3B,EAAO,gBAAgB,CAAC,QAAS,KAC/B,IAAI,CAAC,KAAK,CAAG,EAAO,KAAK,CACzB,IAAI,CAAC,mBAAmB,CAAC,EAAO,KAAK,EACrC,IAAI,CAAC,oBAAoB,GACzB,IAAI,CAAC,MAAM,GACX,IAAI,CAAC,KAAK,EACZ,EACF,GAEA,IAAI,CAAC,CAAA,CAAoB,CAAG,IAAI,CAAC,CAAA,CAAO,CAAC,aAAa,CAAC,8BACvD,IAAI,CAAC,CAAA,CAAoB,CAAC,gBAAgB,CAAC,QAAS,KAClD,IAAI,CAAC,MAAM,EACb,EACF,CACA,oBAAoB,CAAK,CAAE,CACzB,IAAI,CAAC,CAAA,CAAQ,CAAC,OAAO,CAAC,AAAC,GAAO,EAAE,KAAK,EAAI,EAAQ,EAAE,YAAY,CAAC,WAAY,CAAA,GAAQ,EAAE,eAAe,CAAC,YACxG,CAEA,QAAS,CACP,IAAI,CAAC,aAAa,CAAC,IAAI,MAAM,WAC7B,IAAI,CAAC,MAAM,EACb,CACA,OAAQ,CACN,IAAI,CAAC,eAAe,CAAC,EAAY,cAAc,CACjD,CACA,MAAO,CACL,IAAI,CAAC,YAAY,CAAC,EAAY,cAAc,CAAE,CAAA,EAChD,CACA,QAAS,CACP,OAAO,IAAI,CAAC,YAAY,CAAC,EAAY,cAAc,CACrD,CACA,QAAS,CACP,IAAI,CAAC,MAAM,GAAK,IAAI,CAAC,KAAK,GAAK,IAAI,CAAC,IAAI,EAC1C,CACA,IAAI,MAAM,CAAC,CAAE,CACX,IAAI,CAAC,CAAA,CAAM,CAAG,EACd,IAAI,CAAC,YAAY,CAAC,QAAS,EAC7B,CACA,IAAI,OAAQ,CACV,OAAO,IAAI,CAAC,CAAA,CAAM,AACpB,CAEA,WAAW,oBAAqB,CAC9B,MAAO,CAAC,OAAQ,QAAS,KAAM,OAAO,AACxC,CACA,yBAAyB,CAAQ,CAAE,CAAQ,CAAE,CAAQ,CAAE,CACrD,GAAI,IAAa,GACjB,GAAI,AAAa,UAAb,EAAsB,CACxB,IAAI,CAAC,mBAAmB,CAAC,GACzB,IAAI,CAAC,oBAAoB,GACrB,IAAI,CAAC,CAAA,CAAY,EACnB,IAAI,CAAC,MAAM,GAEb,MACF,CACA,GAAI,IAAa,EAAY,cAAc,CAAE,CAC3C,IAAI,CAAC,YAAY,CAAC,EAAY,cAAc,EAAI,IAAI,CAAC,IAAI,GAAK,IAAI,CAAC,KAAK,GACxE,MACF,CACA,IAAI,CAAC,EAAS,CAAG,EACnB,CACF,CACA,eAAe,MAAM,CAAC,eAAgB,GAgDtC,eAAe,MAAM,CAAC,iBA9CtB,cAA2B,EACzB,aAAc,CACZ,KAAK,EACP,CACA,mBAAoB,CAClB,IAAM,EAAS,IAAI,IAAI,SAAS,IAAI,EACpC,EAAO,YAAY,CAAC,GAAG,CAAC,UAAW,IAAI,CAAC,OAAO,EAC/C,QAAQ,YAAY,CAAC,KAAM,GAAI,EAAO,IAAI,CAC5C,CACA,WAAW,CACT,IAAI,CAAC,OAAO,CAAG,IAAI,CAAC,YAAY,CAAC,SACjC,IAAM,EAAS,IAAI,IAAI,SAAS,IAAI,EACpC,EAAO,YAAY,CAAC,GAAG,CAAC,UAAW,IAAI,CAAC,OAAO,EAC/C,IAAI,CAAC,iBAAiB,GACtB,IAAM,EAAU,IAAI,CAAC,OAAO,CAAC,qBAC7B,GAAK,EAAS,CACZ,IAAM,EAAa,EAAQ,OAAO,CAAC,SAAS,CACvC,IACH,EAAQ,SAAS,CAAC,GAAG,CAAC,WACtB,EAAO,YAAY,CAAC,GAAG,CAAC,aAAc,GACtC,MAAM,EAAO,IAAI,CAAE,CACjB,YAAa,cACb,QAAS,CAAC,mBAAoB,gBAAgB,EAC9C,OAAQ,KACV,GACC,IAAI,CAAC,AAAA,GAAY,EAAS,IAAI,IAC9B,IAAI,CAAC,AAAA,IACJ,IAAM,EAAW,SAAS,aAAa,CAAC,WACxC,CAAA,EAAS,SAAS,CAAG,EAAK,IAAI,GAC9B,QAAQ,GAAG,CAAC,uBAAwB,EAAS,OAAO,EAGpD,EAAQ,SAAS,CAAC,MAAM,CAAC,UAC3B,GAAG,KAAK,CAAC,SAAS,CAAG,EACnB,EAAQ,SAAS,CAAC,MAAM,CAAC,WACzB,QAAQ,KAAK,CAAC,EAChB,GAEJ,CACF,CACA,mBAAoB,CAClB,KAAK,CAAC,oBAEN,KAAK,CAAC,iBAAiB,SAAU,AADpB,IAAI,CACqB,SAAS,CAAC,IAAI,CADvC,IAAI,EAEnB,CACF,E","sources":["<anon>","src/js/theme-select.js"],"sourcesContent":["(function () {\nclass $2d7341e6aed6ca4d$var$ThemeSelect extends HTMLElement {\n    static OPEN_ATTRIBUTE = \"open\";\n    #initialized = false;\n    #options = [];\n    #value;\n    #shadow;\n    #shadowOptions;\n    #shadowSelectedValue;\n    constructor(){\n        super();\n    }\n    connectedCallback() {\n        this.#options = this.querySelectorAll(\"option\");\n        this.updateSelectedOption();\n        this.value = this.selectedOption?.value ?? \"\";\n        this.#shadow = this.attachShadow({\n            mode: \"open\"\n        });\n        this.render();\n        document.body.addEventListener(\"click\", (e)=>{\n            if (this.isOpen()) {\n                const boundingBox = this.getBoundingClientRect();\n                const clickInside = e.clientX > boundingBox.x && e.clientX < boundingBox.x + boundingBox.width && e.clientY > boundingBox.y && e.clientY < boundingBox.y + boundingBox.height;\n                if (!clickInside) this.close();\n            }\n        });\n        this.#initialized = true;\n    }\n    updateSelectedOption() {\n        const selectedOption = Array.from(this.#options).find((o)=>o.hasAttribute(\"selected\"));\n        const optionFromValue = Array.from(this.#options).find((o)=>o.value == this.value);\n        const firstOption = this.#options.length > 0 ? this.#options[0] : null;\n        this.selectedOption = selectedOption || optionFromValue || firstOption;\n        if (this.selectedOption == null) console.warn(`[${this.tagName}] Could not identify selected option.`);\n    }\n    render() {\n        this.#shadow.innerHTML = `\n      <div part=\"selected-value\">\n        <span>${this.selectedOption?.innerHTML ?? \"\"}</span>\n      </div>\n      <div part=\"dropdown\">\n        ${Array.from(this.#options).map((o)=>`<option part=\"option ${this.selectedOption == o ? \"selected\" : \"\"} ${o.disabled ? \"disabled\" : \"\"}\" value=\"${o.value}\" ${this.selectedOption == o ? \"selected\" : \"\"} ${o.disabled ? \"disabled\" : \"\"}>${o.innerHTML}</option>`).join(\"\")}\n      </div>\n    `;\n        this.#shadowOptions = this.#shadow.querySelectorAll(\"option\");\n        this.#shadowOptions.forEach((option)=>{\n            option.addEventListener(\"click\", ()=>{\n                this.value = option.value;\n                this.selectOptionByValue(option.value);\n                this.updateSelectedOption();\n                this.update();\n                this.close();\n            });\n        });\n        this.#shadowSelectedValue = this.#shadow.querySelector('div[part=\"selected-value\"]');\n        this.#shadowSelectedValue.addEventListener(\"click\", ()=>{\n            this.toggle();\n        });\n    }\n    selectOptionByValue(value) {\n        this.#options.forEach((o)=>o.value == value ? o.setAttribute(\"selected\", true) : o.removeAttribute(\"selected\"));\n    }\n    update() {\n        this.dispatchEvent(new Event(\"change\"));\n        this.render();\n    }\n    close() {\n        this.removeAttribute($2d7341e6aed6ca4d$var$ThemeSelect.OPEN_ATTRIBUTE);\n    }\n    open() {\n        this.setAttribute($2d7341e6aed6ca4d$var$ThemeSelect.OPEN_ATTRIBUTE, true);\n    }\n    isOpen() {\n        return this.hasAttribute($2d7341e6aed6ca4d$var$ThemeSelect.OPEN_ATTRIBUTE);\n    }\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    set value(v) {\n        this.#value = v;\n        this.setAttribute(\"value\", v);\n    }\n    get value() {\n        return this.#value;\n    }\n    static get observedAttributes() {\n        return [\n            \"name\",\n            \"value\",\n            \"id\",\n            \"open\"\n        ];\n    }\n    attributeChangedCallback(property, oldValue, newValue) {\n        if (oldValue === newValue) return;\n        if (property === \"value\") {\n            this.selectOptionByValue(newValue);\n            this.updateSelectedOption();\n            if (this.#initialized) this.render();\n            return;\n        }\n        if (property === $2d7341e6aed6ca4d$var$ThemeSelect.OPEN_ATTRIBUTE) {\n            this.hasAttribute($2d7341e6aed6ca4d$var$ThemeSelect.OPEN_ATTRIBUTE) ? this.open() : this.close();\n            return;\n        }\n        this[property] = newValue;\n    }\n}\ncustomElements.define(\"theme-select\", $2d7341e6aed6ca4d$var$ThemeSelect);\nclass $2d7341e6aed6ca4d$var$SortBySelect extends $2d7341e6aed6ca4d$var$ThemeSelect {\n    constructor(){\n        super();\n    }\n    updateDeepLinking() {\n        const newUrl = new URL(location.href);\n        newUrl.searchParams.set(\"sort_by\", this.sort_by);\n        history.replaceState(null, \"\", newUrl.href);\n    }\n    updateDOM() {\n        this.sort_by = this.getAttribute(\"value\");\n        const newUrl = new URL(location.href);\n        newUrl.searchParams.set(\"sort_by\", this.sort_by);\n        this.updateDeepLinking();\n        const section = this.closest(\"[data-section-id]\");\n        if (!!section) {\n            const section_id = section.dataset.sectionId;\n            if (!!section_id) {\n                section.classList.add(\"loading\");\n                newUrl.searchParams.set(\"section_id\", section_id);\n                fetch(newUrl.href, {\n                    credentials: \"same-origin\",\n                    headers: {\n                        \"X-Requested-With\": \"XMLHttpRequest\"\n                    },\n                    method: \"GET\"\n                }).then((response)=>response.text()).then((data)=>{\n                    const template = document.createElement(\"template\");\n                    template.innerHTML = data.trim();\n                    console.log(\"handle response TODO\", template.content);\n                    // TODO\n                    // handle response and update\n                    section.classList.remove(\"loading\");\n                }).catch(function(err) {\n                    section.classList.remove(\"loading\");\n                    console.error(err);\n                });\n            }\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        const that = this;\n        super.addEventListener(\"change\", that.updateDOM.bind(that));\n    }\n}\ncustomElements.define(\"sort-by-select\", $2d7341e6aed6ca4d$var$SortBySelect);\n\n})();\n//# sourceMappingURL=theme-select.js.map\n","class ThemeSelect extends HTMLElement {\n  static OPEN_ATTRIBUTE = \"open\";\n  #initialized = false;\n  #options = [];\n  #value;\n  #shadow;\n  #shadowOptions;\n  #shadowSelectedValue;\n  constructor() {\n    super();\n  }\n  connectedCallback() {\n    this.#options = this.querySelectorAll(\"option\");\n    this.updateSelectedOption();\n    this.value = this.selectedOption?.value ?? \"\";\n    this.#shadow = this.attachShadow({ mode: \"open\" });\n\n    this.render();\n\n    document.body.addEventListener(\"click\", (e) => {\n      if (this.isOpen()) {\n        const boundingBox = this.getBoundingClientRect();\n        const clickInside =\n          e.clientX > boundingBox.x &&\n          e.clientX < boundingBox.x + boundingBox.width &&\n          e.clientY > boundingBox.y &&\n          e.clientY < boundingBox.y + boundingBox.height;\n        if (!clickInside) {\n          this.close();\n        }\n      }\n    });\n\n    this.#initialized = true;\n  }\n  updateSelectedOption() {\n    const selectedOption = Array.from(this.#options).find((o) => o.hasAttribute(\"selected\"));\n    const optionFromValue = Array.from(this.#options).find((o) => o.value == this.value);\n    const firstOption = this.#options.length > 0 ? this.#options[0] : null;\n    this.selectedOption = selectedOption || optionFromValue || firstOption;\n    if (this.selectedOption == null) {\n      console.warn(`[${this.tagName}] Could not identify selected option.`);\n    }\n  }\n  render() {\n    this.#shadow.innerHTML = `\n      <div part=\"selected-value\">\n        <span>${this.selectedOption?.innerHTML ?? \"\"}</span>\n      </div>\n      <div part=\"dropdown\">\n        ${Array.from(this.#options)\n          .map(\n            (o) =>\n              `<option part=\"option ${this.selectedOption == o ? \"selected\" : \"\"} ${o.disabled ? \"disabled\" : \"\"}\" value=\"${o.value}\" ${this.selectedOption == o ? \"selected\" : \"\"} ${o.disabled ? \"disabled\" : \"\"}>${o.innerHTML}</option>`,\n          )\n          .join(\"\")}\n      </div>\n    `;\n    this.#shadowOptions = this.#shadow.querySelectorAll(\"option\");\n    this.#shadowOptions.forEach((option) => {\n      option.addEventListener(\"click\", () => {\n        this.value = option.value;\n        this.selectOptionByValue(option.value);\n        this.updateSelectedOption();\n        this.update();\n        this.close();\n      });\n    });\n\n    this.#shadowSelectedValue = this.#shadow.querySelector('div[part=\"selected-value\"]');\n    this.#shadowSelectedValue.addEventListener(\"click\", () => {\n      this.toggle();\n    });\n  }\n  selectOptionByValue(value) {\n    this.#options.forEach((o) => (o.value == value ? o.setAttribute(\"selected\", true) : o.removeAttribute(\"selected\")));\n  }\n\n  update() {\n    this.dispatchEvent(new Event(\"change\"));\n    this.render();\n  }\n  close() {\n    this.removeAttribute(ThemeSelect.OPEN_ATTRIBUTE);\n  }\n  open() {\n    this.setAttribute(ThemeSelect.OPEN_ATTRIBUTE, true);\n  }\n  isOpen() {\n    return this.hasAttribute(ThemeSelect.OPEN_ATTRIBUTE);\n  }\n  toggle() {\n    this.isOpen() ? this.close() : this.open();\n  }\n  set value(v) {\n    this.#value = v;\n    this.setAttribute(\"value\", v);\n  }\n  get value() {\n    return this.#value;\n  }\n\n  static get observedAttributes() {\n    return [\"name\", \"value\", \"id\", \"open\"];\n  }\n  attributeChangedCallback(property, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    if (property === \"value\") {\n      this.selectOptionByValue(newValue);\n      this.updateSelectedOption();\n      if (this.#initialized) {\n        this.render();\n      }\n      return;\n    }\n    if (property === ThemeSelect.OPEN_ATTRIBUTE) {\n      this.hasAttribute(ThemeSelect.OPEN_ATTRIBUTE) ? this.open() : this.close();\n      return;\n    }\n    this[property] = newValue;\n  }\n}\ncustomElements.define('theme-select', ThemeSelect);\n\nclass SortBySelect extends ThemeSelect {\n  constructor() {\n    super();\n  }\n  updateDeepLinking() {\n    const newUrl = new URL(location.href);\n    newUrl.searchParams.set('sort_by', this.sort_by);\n    history.replaceState(null, '', newUrl.href);\n  }\n  updateDOM(){\n    this.sort_by = this.getAttribute('value');\n    const newUrl = new URL(location.href);\n    newUrl.searchParams.set('sort_by', this.sort_by);\n    this.updateDeepLinking();\n    const section = this.closest('[data-section-id]');\n    if(!!section) {\n      const section_id = section.dataset.sectionId;\n      if(!!section_id){\n        section.classList.add('loading');\n        newUrl.searchParams.set('section_id', section_id);\n        fetch(newUrl.href, {\n          credentials: 'same-origin',\n          headers: {'X-Requested-With': 'XMLHttpRequest'},\n          method: 'GET'\n        })\n        .then(response => response.text())\n        .then(data => {\n          const template = document.createElement('template');\n          template.innerHTML = data.trim();\n          console.log('handle response TODO', template.content);\n          // TODO\n          // handle response and update\n          section.classList.remove('loading');\n        }).catch(function(err) {\n          section.classList.remove('loading');\n          console.error(err);\n        });\n      }\n    }\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    const that = this;\n    super.addEventListener('change', that.updateDOM.bind(that));\n  }\n}\ncustomElements.define('sort-by-select', SortBySelect);"],"names":["$2d7341e6aed6ca4d$var$ThemeSelect","HTMLElement","OPEN_ATTRIBUTE","constructor","connectedCallback","querySelectorAll","updateSelectedOption","value","selectedOption","attachShadow","mode","render","document","body","addEventListener","e","isOpen","boundingBox","getBoundingClientRect","clientX","x","width","clientY","y","height","close","Array","from","find","o","hasAttribute","optionFromValue","firstOption","length","console","warn","tagName","innerHTML","map","disabled","join","forEach","option","selectOptionByValue","update","querySelector","toggle","setAttribute","removeAttribute","dispatchEvent","Event","open","v","observedAttributes","attributeChangedCallback","property","oldValue","newValue","customElements","define","updateDeepLinking","newUrl","URL","location","href","searchParams","set","sort_by","history","replaceState","updateDOM","getAttribute","section","closest","section_id","dataset","sectionId","classList","add","fetch","credentials","headers","method","then","response","text","data","template","createElement","trim","log","content","remove","catch","err","error","that","bind"],"version":3,"file":"theme-select.js.map"}