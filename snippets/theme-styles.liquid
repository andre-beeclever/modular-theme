<style>
  :root{
    --screen-width-mobile: 360;
    --screen-width-desktop: 1440;
    --screen-width-span: calc(var(--screen-width-desktop) - var(--screen-width-mobile));
    --font-family-primary: {{settings.font_family_primary.family}}, {{settings.font_family_primary.fallback_families}};
    --font-family-secondary: {{settings.font_family_primary.family}}, {{settings.font_family_primary.fallback_families}};
    --media-background: {{ settings.media_background }};
    
    --site-width: calc(var(--screen-width-desktop) * 1px);
    --site-gutter-max: 53;
    --site-gutter-min: 22;
    --site-gutter: calc(calc(var(--site-gutter-min) * 1px) + (var(--site-gutter-max) - var(--site-gutter-min)) * (100vw - calc(var(--screen-width-mobile) * 1px)) / var(--screen-width-span));

    --spacing-none-max: 0;
    --spacing-2xs-max: 4;
    --spacing-xs-max: 8;
    --spacing-s-max: 15;
    --spacing-m-max: 19;
    --spacing-l-max: 28;
    --spacing-xl-max: 53;
    --spacing-2xl-max: 63;
    --spacing-3xl-max: 127;

    --spacing-none-min: 0;
    --spacing-2xs-min: 4;
    --spacing-xs-min: 8;
    --spacing-s-min: 15;
    --spacing-m-min: 19;
    --spacing-l-min: 22;
    --spacing-xl-min: 22;
    --spacing-2xl-min: 22;
    --spacing-3xl-min: 59;
    
    --spacing-none: calc(calc(var(--spacing-none-min) * 1px) + (var(--spacing-none-max) - var(--spacing-none-min)) * (100vw - calc(var(--screen-width-mobile) * 1px)) / var(--screen-width-span));
    --spacing-2xs: calc(calc(var(--spacing-2xs-min) * 1px) + (var(--spacing-2xs-max) - var(--spacing-2xs-min)) * (100vw - calc(var(--screen-width-mobile) * 1px)) / var(--screen-width-span));
    --spacing-xs: calc(calc(var(--spacing-xs-min) * 1px) + (var(--spacing-xs-max) - var(--spacing-xs-min)) * (100vw - calc(var(--screen-width-mobile) * 1px)) / var(--screen-width-span));
    --spacing-s: calc(calc(var(--spacing-s-min) * 1px) + (var(--spacing-s-max) - var(--spacing-s-min)) * (100vw - calc(var(--screen-width-mobile) * 1px)) / var(--screen-width-span));
    --spacing-m: calc(calc(var(--spacing-m-min) * 1px) + (var(--spacing-m-max) - var(--spacing-m-min)) * (100vw - calc(var(--screen-width-mobile) * 1px)) / var(--screen-width-span));
    --spacing-l: calc(calc(var(--spacing-l-min) * 1px) + (var(--spacing-l-max) - var(--spacing-l-min)) * (100vw - calc(var(--screen-width-mobile) * 1px)) / var(--screen-width-span));
    --spacing-xl: calc(calc(var(--spacing-xl-min) * 1px) + (var(--spacing-xl-max) - var(--spacing-xl-min)) * (100vw - calc(var(--screen-width-mobile) * 1px)) / var(--screen-width-span));
    --spacing-2xl: calc(calc(var(--spacing-2xl-min) * 1px) + (var(--spacing-2xl-max) - var(--spacing-2xl-min)) * (100vw - calc(var(--screen-width-mobile) * 1px)) / var(--screen-width-span));
    --spacing-3xl: calc(calc(var(--spacing-3xl-min) * 1px) + (var(--spacing-3xl-max) - var(--spacing-3xl-min)) * (100vw - calc(var(--screen-width-mobile) * 1px)) / var(--screen-width-span));
    
  }
  {% comment %} color schemes {% endcomment %}
  {% assign scheme_classes = 'body' %}
  {% for scheme in settings.color_schemes -%}
    {% assign scheme_classes = scheme_classes | append: ', .color-' | append: scheme.id %}
    {% if forloop.index == 1 -%}
      :root,
    {%- endif %}
    .color-{{ scheme.id }} {
      --color-background: {{ scheme.settings.background }};
    {% if scheme.settings.background_gradient != empty %}
      --gradient-background: {{ scheme.settings.background_gradient }};
    {% else %}
      --gradient-background: {{ scheme.settings.background }};
    {% endif %}
    --color-foreground: {{ scheme.settings.text }};
  }
  {% endfor %}

  {{ scheme_classes }} {
    color: var(--color-foreground);
    background: var(--gradient-background);
  }

  {% comment %} typography {% endcomment %}
  {% for i in 1..9 %}
    {% assign font_weight = i | times: 100 %}
    {% assign font_family = settings.font_family_primary.family %}
    {% assign font = settings.font_family_primary | font_modify: "weight", font_weight %}
    @font-face {
      font-family: {{ font_family }};
      font-weight: {{ font_weight }}
      src:
        local("{{ font_family }}"),
        local("{{ font_family }}"),
        url("{{ font | font_url }}") format("woff2"),
        url("{{ font | font_url: "woff" }}") format("woff");
    }
    {% assign font_family = settings.font_family_secondary.family %}
    {% assign font = settings.font_family_secondary | font_modify: "weight", font_weight %}
    @font-face {
      font-family: {{ font_family }};
      font-weight: {{ font_weight }}
      src:
        local("{{ font_family }}"),
        local("{{ font_family }}"),
        url("{{ font | font_url }}") format("woff2"),
        url("{{ font | font_url: "woff" }}") format("woff");
    }
  {% endfor %}

  {% assign font_styles = "h1,h2,h3,h4,h5,h6,large,p,small" | split: ',' %}

  {% for font_style in font_styles %}
    {% assign font_family = 'font_family_' | append: font_style %}
    {% assign font_size = 'font_size_' | append: font_style %}
    {% assign font_size_mobile = 'font_size_' | append: font_style | append: '_mobile' %}
    {% assign line_height = 'line_height_' | append: font_style %}
    {% assign font_weight = 'font_weight_' | append: font_style %}
    {% assign selector = font_style | append: ', .' | append: font_style %}
    {% if font_style == 'p' %}
      {% assign selector = selector | prepend: 'body, ' %}
    {% endif %}
    {{selector}}{
      --font-size-min: {{ settings[font_size_mobile] }};
      --font-size-max: {{ settings[font_size] }};
      --font-size-optimal: calc(calc(var(--font-size-min) * 1px) + (var(--font-size-max) - var(--font-size-min)) * (100vw - calc(var(--screen-width-mobile) * 1px)) / var(--screen-width-span));

      font-family: var({{settings[font_family]}});
      font-size: clamp(calc(var(--font-size-min) * 1px), var(--font-size-optimal), calc(var(--font-size-max) * 1px));
      font-weight: {{settings[font_weight]}};
      line-height: {{settings[line_height]}};
      letter-spacing: 1.05px;
      margin: 0;
      color: currentColor;
    }
  {% endfor %}

  {% comment %} buttons {% endcomment %}
  {% assign button_styles = "primary,secondary,tertiary" | split: ',' %}
  {% assign shopify_buttons = ".shopify-payment-button__button.shopify-payment-button__button--unbranded" %}
  .btn{
    {% for button_style in button_styles %}
      {% assign background_color = "button_" | append: button_style | append: "_background_color" %}
      {% assign color = "button_" | append: button_style | append: "_color" %}
      {% assign border_color = "button_" | append: button_style | append: "_border_color" %}
      &.btn--{{button_style}}{% if button_style == "secondary" %}, {{ shopify_buttons }}{% endif %}{
        --background-color: {{ settings[background_color] | default: "transparent" }};
        --color: {{ settings[color] | default: "transparent" }};
        --border-color: {{ settings[border_color] | default: "transparent" }};
      }
    {% endfor %}
  }
</style>
